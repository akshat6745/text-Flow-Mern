{"ast":null,"code":"import _toConsumableArray from\"/Users/akshataggarwal/Desktop/mern-chat-app/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _regeneratorRuntime from\"/Users/akshataggarwal/Desktop/mern-chat-app/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/akshataggarwal/Desktop/mern-chat-app/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/akshataggarwal/Desktop/mern-chat-app/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{Button}from\"@chakra-ui/button\";import{useDisclosure}from\"@chakra-ui/hooks\";import{Input}from\"@chakra-ui/input\";import{Box,Text}from\"@chakra-ui/layout\";import{Menu,MenuButton,MenuDivider,MenuItem,MenuList}from\"@chakra-ui/menu\";import{Drawer,DrawerBody,DrawerContent,DrawerHeader,DrawerOverlay}from\"@chakra-ui/modal\";import{Tooltip}from\"@chakra-ui/tooltip\";import{BellIcon,ChevronDownIcon}from\"@chakra-ui/icons\";import{Avatar}from\"@chakra-ui/avatar\";import{useHistory}from\"react-router-dom\";import{useState}from\"react\";import axios from\"axios\";import{useToast}from\"@chakra-ui/toast\";import ChatLoading from\"../ChatLoading\";import{Spinner}from\"@chakra-ui/spinner\";import ProfileModal from\"./ProfileModal\";import NotificationBadge from\"react-notification-badge\";import{Effect}from\"react-notification-badge\";import{getSender}from\"../../config/ChatLogics\";import UserListItem from\"../userAvatar/UserListItem\";import{ChatState}from\"../../Context/ChatProvider\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";function SideDrawer(){var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),search=_useState2[0],setSearch=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),searchResult=_useState4[0],setSearchResult=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),loading=_useState6[0],setLoading=_useState6[1];var _useState7=useState(false),_useState8=_slicedToArray(_useState7,2),loadingChat=_useState8[0],setLoadingChat=_useState8[1];var _ChatState=ChatState(),setSelectedChat=_ChatState.setSelectedChat,user=_ChatState.user,notification=_ChatState.notification,setNotification=_ChatState.setNotification,chats=_ChatState.chats,setChats=_ChatState.setChats;var toast=useToast();var _useDisclosure=useDisclosure(),isOpen=_useDisclosure.isOpen,onOpen=_useDisclosure.onOpen,onClose=_useDisclosure.onClose;var history=useHistory();var logoutHandler=function logoutHandler(){localStorage.removeItem(\"userInfo\");history.push(\"/\");};var handleSearch=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var config,_yield$axios$get,data;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(search){_context.next=3;break;}toast({title:\"Please Enter something in search\",status:\"warning\",duration:5000,isClosable:true,position:\"top-left\"});return _context.abrupt(\"return\");case 3:_context.prev=3;setLoading(true);config={headers:{Authorization:\"Bearer \".concat(user.token)}};_context.next=8;return axios.get(\"/api/user?search=\".concat(search),config);case 8:_yield$axios$get=_context.sent;data=_yield$axios$get.data;setLoading(false);setSearchResult(data);_context.next=17;break;case 14:_context.prev=14;_context.t0=_context[\"catch\"](3);toast({title:\"Error Occured!\",description:\"Failed to Load the Search Results\",status:\"error\",duration:5000,isClosable:true,position:\"bottom-left\"});case 17:case\"end\":return _context.stop();}}},_callee,null,[[3,14]]);}));return function handleSearch(){return _ref.apply(this,arguments);};}();var accessChat=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(userId){var config,_yield$axios$post,data;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:console.log(userId);_context2.prev=1;setLoadingChat(true);config={headers:{\"Content-type\":\"application/json\",Authorization:\"Bearer \".concat(user.token)}};_context2.next=6;return axios.post(\"/api/chat\",{userId:userId},config);case 6:_yield$axios$post=_context2.sent;data=_yield$axios$post.data;if(!chats.find(function(c){return c._id===data._id;}))setChats([data].concat(_toConsumableArray(chats)));setSelectedChat(data);setLoadingChat(false);onClose();_context2.next=17;break;case 14:_context2.prev=14;_context2.t0=_context2[\"catch\"](1);toast({title:\"Error fetching the chat\",description:_context2.t0.message,status:\"error\",duration:5000,isClosable:true,position:\"bottom-left\"});case 17:case\"end\":return _context2.stop();}}},_callee2,null,[[1,14]]);}));return function accessChat(_x){return _ref2.apply(this,arguments);};}();return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(Box,{d:\"flex\",justifyContent:\"space-between\",alignItems:\"center\",bg:\"white\",w:\"100%\",p:\"5px 10px 5px 10px\",borderWidth:\"5px\",children:[/*#__PURE__*/_jsx(Tooltip,{label:\"Search Users to chat\",hasArrow:true,placement:\"bottom-end\",children:/*#__PURE__*/_jsxs(Button,{variant:\"ghost\",onClick:onOpen,children:[/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-search\"}),/*#__PURE__*/_jsx(Text,{d:{base:\"none\",md:\"flex\"},px:4,children:\"Search User\"})]})}),/*#__PURE__*/_jsx(Text,{fontSize:\"2xl\",fontFamily:\"Work sans\",children:\"Text-Flow\"}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(Menu,{children:[/*#__PURE__*/_jsxs(MenuButton,{p:1,children:[/*#__PURE__*/_jsx(NotificationBadge,{count:notification.length,effect:Effect.SCALE}),/*#__PURE__*/_jsx(BellIcon,{fontSize:\"2xl\",m:1})]}),/*#__PURE__*/_jsxs(MenuList,{pl:2,children:[!notification.length&&\"No New Messages\",notification.map(function(notif){return/*#__PURE__*/_jsx(MenuItem,{onClick:function onClick(){setSelectedChat(notif.chat);setNotification(notification.filter(function(n){return n!==notif;}));},children:notif.chat.isGroupChat?\"New Message in \".concat(notif.chat.chatName):\"New Message from \".concat(getSender(user,notif.chat.users))},notif._id);})]})]}),/*#__PURE__*/_jsxs(Menu,{children:[/*#__PURE__*/_jsx(MenuButton,{as:Button,bg:\"white\",rightIcon:/*#__PURE__*/_jsx(ChevronDownIcon,{}),children:/*#__PURE__*/_jsx(Avatar,{size:\"sm\",cursor:\"pointer\",name:user.name,src:user.pic})}),/*#__PURE__*/_jsxs(MenuList,{children:[/*#__PURE__*/_jsxs(ProfileModal,{user:user,children:[/*#__PURE__*/_jsx(MenuItem,{children:\"My Profile\"}),\" \"]}),/*#__PURE__*/_jsx(MenuDivider,{}),/*#__PURE__*/_jsx(MenuItem,{onClick:logoutHandler,children:\"Logout\"})]})]})]})]}),/*#__PURE__*/_jsxs(Drawer,{placement:\"left\",onClose:onClose,isOpen:isOpen,children:[/*#__PURE__*/_jsx(DrawerOverlay,{}),/*#__PURE__*/_jsxs(DrawerContent,{children:[/*#__PURE__*/_jsx(DrawerHeader,{borderBottomWidth:\"1px\",children:\"Search Users\"}),/*#__PURE__*/_jsxs(DrawerBody,{children:[/*#__PURE__*/_jsxs(Box,{d:\"flex\",pb:2,children:[/*#__PURE__*/_jsx(Input,{placeholder:\"Search by name or email\",mr:2,value:search,onChange:function onChange(e){return setSearch(e.target.value);}}),/*#__PURE__*/_jsx(Button,{onClick:handleSearch,children:\"Go\"})]}),loading?/*#__PURE__*/_jsx(ChatLoading,{}):searchResult===null||searchResult===void 0?void 0:searchResult.map(function(user){return/*#__PURE__*/_jsx(UserListItem,{user:user,handleFunction:function handleFunction(){return accessChat(user._id);}},user._id);}),loadingChat&&/*#__PURE__*/_jsx(Spinner,{ml:\"auto\",d:\"flex\"})]})]})]})]});}export default SideDrawer;","map":{"version":3,"sources":["/Users/akshataggarwal/Desktop/mern-chat-app/frontend/src/components/miscellaneous/SideDrawer.js"],"names":["Button","useDisclosure","Input","Box","Text","Menu","MenuButton","MenuDivider","MenuItem","MenuList","Drawer","DrawerBody","DrawerContent","DrawerHeader","DrawerOverlay","Tooltip","BellIcon","ChevronDownIcon","Avatar","useHistory","useState","axios","useToast","ChatLoading","Spinner","ProfileModal","NotificationBadge","Effect","getSender","UserListItem","ChatState","SideDrawer","search","setSearch","searchResult","setSearchResult","loading","setLoading","loadingChat","setLoadingChat","setSelectedChat","user","notification","setNotification","chats","setChats","toast","isOpen","onOpen","onClose","history","logoutHandler","localStorage","removeItem","push","handleSearch","title","status","duration","isClosable","position","config","headers","Authorization","token","get","data","description","accessChat","userId","console","log","post","find","c","_id","message","base","md","length","SCALE","map","notif","chat","filter","n","isGroupChat","chatName","users","name","pic","e","target","value"],"mappings":"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","sourcesContent":["import { Button } from \"@chakra-ui/button\";\nimport { useDisclosure } from \"@chakra-ui/hooks\";\nimport { Input } from \"@chakra-ui/input\";\nimport { Box, Text } from \"@chakra-ui/layout\";\nimport {\n  Menu,\n  MenuButton,\n  MenuDivider,\n  MenuItem,\n  MenuList,\n} from \"@chakra-ui/menu\";\nimport {\n  Drawer,\n  DrawerBody,\n  DrawerContent,\n  DrawerHeader,\n  DrawerOverlay,\n} from \"@chakra-ui/modal\";\nimport { Tooltip } from \"@chakra-ui/tooltip\";\nimport { BellIcon, ChevronDownIcon } from \"@chakra-ui/icons\";\nimport { Avatar } from \"@chakra-ui/avatar\";\nimport { useHistory } from \"react-router-dom\";\nimport { useState } from \"react\";\nimport axios from \"axios\";\nimport { useToast } from \"@chakra-ui/toast\";\nimport ChatLoading from \"../ChatLoading\";\nimport { Spinner } from \"@chakra-ui/spinner\";\nimport ProfileModal from \"./ProfileModal\";\nimport NotificationBadge from \"react-notification-badge\";\nimport { Effect } from \"react-notification-badge\";\nimport { getSender } from \"../../config/ChatLogics\";\nimport UserListItem from \"../userAvatar/UserListItem\";\nimport { ChatState } from \"../../Context/ChatProvider\";\n\nfunction SideDrawer() {\n  const [search, setSearch] = useState(\"\");\n  const [searchResult, setSearchResult] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [loadingChat, setLoadingChat] = useState(false);\n\n  const {\n    setSelectedChat,\n    user,\n    notification,\n    setNotification,\n    chats,\n    setChats,\n  } = ChatState();\n\n  const toast = useToast();\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  const history = useHistory();\n\n  const logoutHandler = () => {\n    localStorage.removeItem(\"userInfo\");\n    history.push(\"/\");\n  };\n\n  const handleSearch = async () => {\n    if (!search) {\n      toast({\n        title: \"Please Enter something in search\",\n        status: \"warning\",\n        duration: 5000,\n        isClosable: true,\n        position: \"top-left\",\n      });\n      return;\n    }\n\n    try {\n      setLoading(true);\n\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`,\n        },\n      };\n\n      const { data } = await axios.get(`/api/user?search=${search}`, config);\n\n      setLoading(false);\n      setSearchResult(data);\n    } catch (error) {\n      toast({\n        title: \"Error Occured!\",\n        description: \"Failed to Load the Search Results\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom-left\",\n      });\n    }\n  };\n\n  const accessChat = async (userId) => {\n    console.log(userId);\n\n    try {\n      setLoadingChat(true);\n      const config = {\n        headers: {\n          \"Content-type\": \"application/json\",\n          Authorization: `Bearer ${user.token}`,\n        },\n      };\n      const { data } = await axios.post(`/api/chat`, { userId }, config);\n\n      if (!chats.find((c) => c._id === data._id)) setChats([data, ...chats]);\n      setSelectedChat(data);\n      setLoadingChat(false);\n      onClose();\n    } catch (error) {\n      toast({\n        title: \"Error fetching the chat\",\n        description: error.message,\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom-left\",\n      });\n    }\n  };\n\n  return (\n    <>\n      <Box\n        d=\"flex\"\n        justifyContent=\"space-between\"\n        alignItems=\"center\"\n        bg=\"white\"\n        w=\"100%\"\n        p=\"5px 10px 5px 10px\"\n        borderWidth=\"5px\"\n      >\n        <Tooltip label=\"Search Users to chat\" hasArrow placement=\"bottom-end\">\n          <Button variant=\"ghost\" onClick={onOpen}>\n            <i className=\"fas fa-search\"></i>\n            <Text d={{ base: \"none\", md: \"flex\" }} px={4}>\n              Search User\n            </Text>\n          </Button>\n        </Tooltip>\n        <Text fontSize=\"2xl\" fontFamily=\"Work sans\">\n          Text-Flow\n        </Text>\n        <div>\n          <Menu>\n            <MenuButton p={1}>\n              <NotificationBadge\n                count={notification.length}\n                effect={Effect.SCALE}\n              />\n              <BellIcon fontSize=\"2xl\" m={1} />\n            </MenuButton>\n            <MenuList pl={2}>\n              {!notification.length && \"No New Messages\"}\n              {notification.map((notif) => (\n                <MenuItem\n                  key={notif._id}\n                  onClick={() => {\n                    setSelectedChat(notif.chat);\n                    setNotification(notification.filter((n) => n !== notif));\n                  }}\n                >\n                  {notif.chat.isGroupChat\n                    ? `New Message in ${notif.chat.chatName}`\n                    : `New Message from ${getSender(user, notif.chat.users)}`}\n                </MenuItem>\n              ))}\n            </MenuList>\n          </Menu>\n          <Menu>\n            <MenuButton as={Button} bg=\"white\" rightIcon={<ChevronDownIcon />}>\n              <Avatar\n                size=\"sm\"\n                cursor=\"pointer\"\n                name={user.name}\n                src={user.pic}\n              />\n            </MenuButton>\n            <MenuList>\n              <ProfileModal user={user}>\n                <MenuItem>My Profile</MenuItem>{\" \"}\n              </ProfileModal>\n              <MenuDivider />\n              <MenuItem onClick={logoutHandler}>Logout</MenuItem>\n            </MenuList>\n          </Menu>\n        </div>\n      </Box>\n\n      <Drawer placement=\"left\" onClose={onClose} isOpen={isOpen}>\n        <DrawerOverlay />\n        <DrawerContent>\n          <DrawerHeader borderBottomWidth=\"1px\">Search Users</DrawerHeader>\n          <DrawerBody>\n            <Box d=\"flex\" pb={2}>\n              <Input\n                placeholder=\"Search by name or email\"\n                mr={2}\n                value={search}\n                onChange={(e) => setSearch(e.target.value)}\n              />\n              <Button onClick={handleSearch}>Go</Button>\n            </Box>\n            {loading ? (\n              <ChatLoading />\n            ) : (\n              searchResult?.map((user) => (\n                <UserListItem\n                  key={user._id}\n                  user={user}\n                  handleFunction={() => accessChat(user._id)}\n                />\n              ))\n            )}\n            {loadingChat && <Spinner ml=\"auto\" d=\"flex\" />}\n          </DrawerBody>\n        </DrawerContent>\n      </Drawer>\n    </>\n  );\n}\n\nexport default SideDrawer;\n"]},"metadata":{},"sourceType":"module"}